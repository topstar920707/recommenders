[tox]
# py will use whatever the basepython `python` maps to from PATH
# you can use py38, for example, to chosse a different version
# See https://tox.readthedocs.io/en/latest/config.html#tox-environments
envlist = py


[testenv]
# Reading additional dependencies to run the test
# https://tox.readthedocs.io/en/latest/example/basic.html#depending-on-requirements-txt-or-defining-constraints
; deps = -rrequirements-dev.txt
# similar to 'pip install recommenders-*.whl[test]'
extras = all
commands = 
    # {posargs} will be substituded by arguments after the `--` when running.
    # This will allow running subset of the test suite via tox. 
    #
    # EX: tox -- -m "not spark and not gpu" 
    #     will pass {-m "not spark and not gpu"} to `pytest`
    # See https://tox.readthedocs.io/en/latest/example/general.html for more details
    pytest {posargs}


# Configurations for running pytest
[pytest]
log_cli = False
log_format = %(asctime)s %(levelname)s %(message)s
junit_family = xunit2
# This enable custom marker as decorator "@pytest.mark.gpu"
markers = 
    # markers allow to us to run faster subset of the test:
    # EX: pytest -m "not spark and not gpu"
    # See https://docs.pytest.org/en/stable/example/markers.html#registering-markers
    deeprec: test deeprec model
    sequential: test sequential model
    notebooks: mark a test as notebooks test
    smoke: mark a test as smoke test
    integration: mark a test as integration test
    gpu: mark a test as gpu test
    spark: mark a test as spark test
    vw: mark a test as vowpal wabbit test
testpaths =
    tests
addopts =
    # reports all (except passed tests). See https://docs.pytest.org/en/latest/usage.html#detailed-summary-report
    -ra
    --durations 0 
    --cov-append --cov=recommenders --cov-report=html --cov-report=term-missing --cov-report=xml --junitxml=junit/test-results.xml


[flake8]
; # Configs for flake8-import-order, see https://pypi.org/project/flake8-import-order/ for more info.
; import-order-style=edited
; application-import-names=genalog, tests
# Native flake8 configs
max-line-length = 140
exclude = 
    build, dist, docs, examples,
    tests
    .env*,.venv* # local virtual environments
    .tox