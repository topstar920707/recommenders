# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# ---------------------------------------------------------

name: azureml-unit-tests

on:
  # # pull_request_target allows execution of workflows in the context
  # # of a base repository. When a PR is raised from a forked repo, it
  # # gives the workflow access to AZUREML_TEST_CREDENTIALS, stored as
  # # a repo level secret, which is needed to trigger execution of unit
  # # tests on AzureML compute.
  # pull_request_target:
  #   types:
  #     - opened
  #     - reopened
  #     - synchronize
  #   branches:
  #     - 'staging'
  #     - 'main'

  # # enable manual trigger
  # workflow_dispatch:
  #   input:
  #     tags:
  #       description: 'Tags to label this manual run (optional)'
  #       default: 'Anything to describe this manual run'

  # # make this workflow reusable
  # workflow_call:

  push:
    branches:
      - 'pradjoshi/composite_actions'

jobs:
  get-test-groups:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get test group names
        id: get-test-groups
        uses: ./.github/actions/get-test-groups
        with:
          TEST_KIND: "unit"
      - name: Print test group names
        run: echo ${{ steps.get-test-groups.outputs.test_groups }}
        shell: bash

  execute-tests:
    needs: get-test-groups
    name: ${{ join(matrix.*, ', ') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['"python=3.7"', '"python=3.8"', '"python=3.9"']
        test-group:  ${{ fromJSON(needs.get-test-groups.outputs.test_groups) }}
    steps:
      - name: Execute tests
        uses: ./.github/actions/azureml-test
        with:
          EXP_NAME: 'unit_tests'
          TEST_KIND: 'unit'
          AZUREML_TEST_CREDENTIALS: ${{ secrets.AZUREML_TEST_CREDENTIALS }}
          AZUREML_TEST_SUBID: ${{ secrets.AZUREML_TEST_SUBID }}
          PYTHON_VERSION: ${{ matrix.python-version }}
          TEST_GROUP: ${{ matrix.test-group }}
