# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# ---------------------------------------------------------
name: pr-gate

on:
  pull_request:
    branches: [ staging, main ]

# This file defines following CI workflow:
#
#  ┌──────────┐   ┌─────────┐   ┌────────┐
#  │  static  ├─┬─►  build* ├─┬─►  test  │
#  │ analysis │ │ │  (cpu)  │ │ │ report │
#  └──────────┘ │ └─────────┘ │ └────────┘         
#               │ ┌─────────┐ │
#               ├─►  build* ├─┤
#               │ │ (spark) │ │
#               │ └─────────┘ │
#               │ ┌─────────┐ │
#               └─►  build* ├─┘
#                 │  (gpu)  │
#                 └─────────┘
#                    ....
# *each runs in PARALLEL the different combinations
#  of python version, OS, test subsets, etc
#
#  ASCII chart created via https://asciiflow.com/

jobs:
###############################################
############### STATIC-ANALYSIS ###############
###############################################
  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    
    - name: Install dependencies (tox)
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install tox

    - name: Run flake8
      # TODO: re-enable this flake8 block (turned off to get a draft of the pipeline infrastructure)
      continue-on-error: true
      run: |
       tox -e flake8

###############################################
################## CPU-BUILD ##################
###############################################
  build-cpu:
    runs-on: ${{ matrix.os }}
    needs: static-analysis
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.6]
        # different kind of tests are located in tests/<unit|integration|smoke> folders
        test-kind: ['unit'] 
        # pytest markers configured in tox.ini. See https://docs.pytest.org/en/6.2.x/example/markers.html
        test-marker: ['not gpu and not spark and not notebooks', 'notebooks and not gpu and not spark']

    steps:
    - uses: actions/checkout@v2
    ################# Run Python tests #################
    - name: Use Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    # There are little documentation on how to call **local** actions
    # https://docs.github.com/en/actions/creating-actions/about-actions#choosing-a-location-for-your-action
    # but there is some working insights from this discussion:
    # https://github.community/t/path-to-action-in-the-same-repository-as-workflow/16952/2
    - name: Run ${{ matrix.test-kind }} tests ('${{ matrix.test-marker }}')
      uses: ./.github/workflows/actions/run-tests
      with:
        test-kind: ${{ matrix.test-kind }}
        test-marker: ${{ matrix.test-marker }}
    # Currently GitHub workflow cannot call an action from another action
    # https://github.community/t/call-an-action-from-another-action/17524
    # Else this shared step can also be move to the local action: .github/workflows/actions/run-tests
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-cov
        path: .coverage*

###############################################
################# SPARK-BUILD #################
###############################################
  build-spark:
    runs-on: ${{ matrix.os }}
    needs: static-analysis
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [8]
        python: [3.6]
        # different kind of tests are located in tests/<unit|integration|smoke> folders
        test-kind: ['unit'] 
        # pytest markers configured in tox.ini. See https://docs.pytest.org/en/6.2.x/example/markers.html
        test-marker: ['notebooks and spark and not gpu', 'spark and not notebooks and not gpu']

    steps:
    - uses: actions/checkout@v2
    ################# Install spark dependencies (java) #################
    - name: Setup Java JDK
      uses: actions/setup-java@v2.1.0
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'
    
    ################# Run Python tests #################
    - name: Use Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Run ${{ matrix.test-kind }} tests ('${{ matrix.test-marker }}')
      uses: ./.github/workflows/actions/run-tests
      with:
        test-kind: ${{ matrix.test-kind }}
        test-marker: ${{ matrix.test-marker }}
      
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-cov
        path: .coverage*

###############################################
################# GPU-BUILD #################
###############################################
  build-gpu:
    runs-on: [self-hosted, Linux, gpu] # this is a union of labels to select specific self-hosted machine
    needs: static-analysis
    strategy:
      matrix:
        python: [3.6]
        # different kind of tests are located in tests/<unit|integration|smoke> folders
        test-kind: ['unit'] 
        # pytest markers configured in tox.ini. See https://docs.pytest.org/en/6.2.x/example/markers.html
        test-marker: ['gpu and notebooks and not spark', 'gpu and not notebooks and not spark']

    steps:
    - uses: actions/checkout@v2

    ################# Run Python tests #################
    - name: Use Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Run ${{ matrix.test-kind }} tests ('${{ matrix.test-marker }}')
      uses: ./.github/workflows/actions/run-tests
      with:
        test-kind: ${{ matrix.test-kind }}
        test-marker: ${{ matrix.test-marker }}
      
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-cov
        path: .coverage*

###############################################
############ TEST COVERAGE SUMMARY ############
###############################################
  collect-code-cov:
    runs-on: ubuntu-latest
    needs: [build-cpu, build-spark, build-gpu]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.6'

      - name: Download coverage reports from all previous jobs
        uses: actions/download-artifact@v2
        with:
          name: code-cov

      - name: Merge coverage reports
        uses: ./.github/workflows/actions/merge-cov
          
      - name: Upload code coverage report to CodeCov
        uses: codecov/codecov-action@v2.0.2
        with:
          fail_ci_if_error: true
          # comes from the last 'Merge coverage reports' step
          files: ./coverage.xml
