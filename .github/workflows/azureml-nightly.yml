# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# ---------------------------------------------------------

name: azureml-nightly

on:
  #          ┌───────────── minute (0 - 59)
  #          │ ┌───────────── hour (0 - 23)
  #          │ │ ┌───────────── day of the month (1 - 31)
  #          │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #          │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)                                  
  #          │ │ │ │ │
  #          │ │ │ │ │
  schedule: 
    - cron: '0 0 * * *'  # basically running everyday at 12AM
    # cron works with default branch (main) only: # https://github.community/t/on-schedule-per-branch/17525/2
  
  push:
    # because we can't schedule runs for non-main branches,
    # to ensure we are running the build on the staging branch, we can add push policy for it
    branches: [staging]

  # enable manual trigger
  workflow_dispatch:
    input:
      tags:
        description: 'Tags to label this manual run (optional)'
        default: 'Anything to describe this manual run'

env:
  CPU_CLUSTER_NAME: "cpu-cluster"
  GPU_CLUSTER_NAME: "gpu-cluster"
  EXP_NAME: "nightly_tests"
  RG: "recommenders_project_resources"
  WS: "azureml-test-workspace"
  TEST_LOGS_PATH: '"test_logs.log"'
  PYTEST_EXIT_CODE: "pytest_exit_code.log"

jobs:
  nightly-tests:
    name: ${{ join(matrix.*, ', ') }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['"python=3.7"']
        test-group: ['"group_cpu_001"', '"group_cpu_002"', '"group_cpu_003"', '"group_gpu_001"', '"group_gpu_002"', '"group_gpu_003"', '"group_gpu_004"', '"group_gpu_005"', '"group_gpu_006"', '"group_gpu_007"', '"group_gpu_008"', '"group_gpu_009"', '"group_gpu_010"', '"group_spark_001"']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with: 
          python-version: "3.8"
      - name: Install azureml-core and azure-cli on a GitHub hosted server
        run: pip install azureml-core azure-cli
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZUREML_TEST_CREDENTIALS}}
      - name: Install wheel package
        run: pip install wheel
      - name: Create wheel from setup.py
        run: python setup.py bdist_wheel
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Submit CPU tests to AzureML
        if: contains(matrix.test-group, 'cpu')
        run: >-
            python tests/ci/azureml_tests/submit_groupwise_azureml_pytest.py --clustername ${{env.CPU_CLUSTER_NAME}}
            --subid ${{secrets.AZUREML_TEST_SUBID}} --reponame "recommenders" --branch ${{ steps.extract_branch.outputs.branch }}
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --testkind "nightly"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Submit GPU tests to AzureML
        if: contains(matrix.test-group, 'gpu')
        run: >-
            python tests/ci/azureml_tests/submit_groupwise_azureml_pytest.py --clustername ${{env.GPU_CLUSTER_NAME}}
            --subid ${{secrets.AZUREML_TEST_SUBID}} --reponame "recommenders" --branch ${{ steps.extract_branch.outputs.branch }}
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --add_gpu_dependencies --testkind "nightly"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Submit PySpark tests to AzureML
        if: contains(matrix.test-group, 'spark')
        run: >-
            python tests/ci/azureml_tests/submit_groupwise_azureml_pytest.py --clustername ${{env.CPU_CLUSTER_NAME}}
            --subid ${{secrets.AZUREML_TEST_SUBID}} --reponame "recommenders" --branch ${{ steps.extract_branch.outputs.branch }}
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --add_spark_dependencies --testkind "nightly"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Print test logs
        run: cat ${{env.TEST_LOGS_PATH}}
      - name: Get exit status
        id: exit_status
        run: echo ::set-output name=code::$(cat ${{env.PYTEST_EXIT_CODE}})
      - name: Check Success/Failure
        if: ${{ steps.exit_status.outputs.code != 0 }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('All tests did not pass!')
