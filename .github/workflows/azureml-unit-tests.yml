# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# ---------------------------------------------------------

name: aml-unit-tests

on:
  pull_request:
    branches: [ staging, main ]

  # enable manual trigger
  workflow_dispatch:
    input:
      tags:
        description: 'Tags to label this manual run (optional)'
        default: 'Anything to describe this manual run'

env:
  CLUSTER_NAME: "nightly-cluster"
  EXP_NAME: "unit_tests"
  RG: "pradjoshi-aml-rg"
  WS: "pradjoshi-aml-ws"
  TEST_LOGS_PATH: '"test_logs.log"'
  PYTEST_EXIT_CODE: "pytest_exit_code.log"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['"python=3.7"']
        test-group: ['"group_cpu_001"', '"group_notebooks_cpu_001"', '"group_notebooks_cpu_002"', '"group_pyspark_001"', '"group_pyspark_002"', '"group_notebooks_pyspark_001"', '"group_notebooks_pyspark_002"', '"group_notebooks_pyspark_003"', '"group_gpu_001"', '"group_gpu_002"', '"group_gpu_003"', '"group_notebooks_gpu_001"', '"group_notebooks_gpu_002"', '"group_notebooks_gpu_003"']
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with: 
          python-version: "3.8"
      - name: Install azureml-core and azure-cli on a GitHub hosted server
        run: pip install azureml-core azure-cli
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{secrets.AML_TEST_CREDENTIALS}}
      - name: Install wheel package
        run: pip install wheel
      - name: Create wheel from setup.py
        run: python setup.py bdist_wheel
      - name: Submit CPU tests to AML
        if: contains(matrix.test-group, 'cpu')
        run: >-
            python tests/ci/aml_tests_github_actions/submit_groupwise_azureml_pytest.py --clustername ${{env.CLUSTER_NAME}}
            --subid ${{secrets.AML_TEST_SUBID}} --reponame "recommenders" --branch "pradjoshi/aml_tests"
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --testkind "unit"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Submit GPU tests to AML
        if: contains(matrix.test-group, 'gpu')
        run: >-
            python tests/ci/aml_tests_github_actions/submit_groupwise_azureml_pytest.py --clustername ${{env.CLUSTER_NAME}}
            --subid ${{secrets.AML_TEST_SUBID}} --reponame "recommenders" --branch "pradjoshi/aml_tests"
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --add_gpu_dependencies --testkind "unit"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Submit PySpark tests to AML
        if: contains(matrix.test-group, 'spark')
        run: >-
            python tests/ci/aml_tests_github_actions/submit_groupwise_azureml_pytest.py --clustername ${{env.CLUSTER_NAME}}
            --subid ${{secrets.AML_TEST_SUBID}} --reponame "recommenders" --branch "pradjoshi/aml_tests"
            --rg ${{env.RG}} --wsname ${{env.WS}} --expname ${{env.EXP_NAME}}_${{matrix.test-group}}
            --testlogs ${{env.TEST_LOGS_PATH}} --add_spark_dependencies --testkind "unit"
            --conda_pkg_python ${{matrix.python-version}} --testgroup ${{matrix.test-group}}
      - name: Print test logs
        run: cat ${{env.TEST_LOGS_PATH}}
      - name: Get exit status
        id: exit_status
        run: echo ::set-output name=code::$(cat ${{env.PYTEST_EXIT_CODE}})
      - name: Check Success/Failure
        if: ${{ steps.exit_status.outputs.code != 0 }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('All tests did not pass!')
